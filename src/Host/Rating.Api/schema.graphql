schema {
  query: Query
}

interface Error {
  message: String!
}

type Anime {
  entityType: String!
  totalRating: Float! @cost(weight: "10")
  id: ID!
}

type Manga {
  totalRating: Float! @cost(weight: "10")
  id: Int!
}

type Query {
  animeById(id: ID!): Anime! @lookup @internal @cost(weight: "10")
  mangaById(id: Int!): Manga! @lookup @internal @cost(weight: "10")
  rating(id: Int! entityType: String!): Float! @cost(weight: "10")
}

"The purpose of the `cost` directive is to define a `weight` for GraphQL types, fields, and arguments. Static analysis can use these weights when calculating the overall cost of a query or response."
directive @cost("The `weight` argument defines what value to add to the overall cost for every appearance, or possible appearance, of a type, field, argument, etc." weight: String!) on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM | INPUT_FIELD_DEFINITION

directive @internal on FIELD_DEFINITION

directive @lookup on FIELD_DEFINITION