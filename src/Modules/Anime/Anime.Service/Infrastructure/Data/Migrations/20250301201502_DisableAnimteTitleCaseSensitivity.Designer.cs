// <auto-generated />
using System;
using Anime.Service.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace anime.Service.src.Anime.Service.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AnimeDbContext))]
    [Migration("20250301201502_DisableAnimteTitleCaseSensitivity")]
    partial class DisableAnimteTitleCaseSensitivity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:CollationDefinition:case_insensitive", "en-u-ks-primary,en-u-ks-primary,icu,False")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Anime.Contracts.Models.Anime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Demographics")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Shounen");

                    b.Property<bool>("IsAiring")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsCompleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StudioId")
                        .HasColumnType("integer");

                    b.Property<string>("Synopsis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .UseCollation("case_insensitive");

                    b.Property<int>("TotalEpisodes")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StudioId");

                    b.ToTable("Animes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Demographics = "Shoujo",
                            IsAiring = false,
                            IsCompleted = true,
                            ReleaseDate = new DateTime(1988, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = 1,
                            Synopsis = "Two girls move to the countryside and encounter magical creatures.",
                            Title = "My Neighbor Totoro",
                            TotalEpisodes = 1
                        },
                        new
                        {
                            Id = 2,
                            Demographics = "Shoujo",
                            IsAiring = false,
                            IsCompleted = true,
                            ReleaseDate = new DateTime(2001, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = 1,
                            Synopsis = "A young girl finds herself in a mysterious spirit world.",
                            Title = "Spirited Away",
                            TotalEpisodes = 1
                        },
                        new
                        {
                            Id = 3,
                            Demographics = "Shounen",
                            IsAiring = false,
                            IsCompleted = true,
                            ReleaseDate = new DateTime(1989, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = 2,
                            Synopsis = "The adventures of Goku as he defends Earth from powerful enemies.",
                            Title = "Dragon Ball Z",
                            TotalEpisodes = 291
                        },
                        new
                        {
                            Id = 4,
                            Demographics = "Shounen",
                            IsAiring = true,
                            IsCompleted = false,
                            ReleaseDate = new DateTime(1999, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = 2,
                            Synopsis = "A young pirate searches for the ultimate treasure.",
                            Title = "One Piece",
                            TotalEpisodes = 1000
                        },
                        new
                        {
                            Id = 5,
                            Demographics = "Seinen",
                            IsAiring = false,
                            IsCompleted = true,
                            ReleaseDate = new DateTime(2006, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = 3,
                            Synopsis = "A high school student finds a notebook that allows him to kill anyone by writing their name.",
                            Title = "Death Note",
                            TotalEpisodes = 37
                        },
                        new
                        {
                            Id = 6,
                            Demographics = "Shounen",
                            IsAiring = false,
                            IsCompleted = true,
                            ReleaseDate = new DateTime(2011, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = 3,
                            Synopsis = "A young boy searches for his hunter father.",
                            Title = "Hunter x Hunter",
                            TotalEpisodes = 148
                        },
                        new
                        {
                            Id = 7,
                            Demographics = "Seinen",
                            IsAiring = false,
                            IsCompleted = true,
                            ReleaseDate = new DateTime(1998, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = 4,
                            Synopsis = "A crew of bounty hunters chase criminals across the galaxy.",
                            Title = "Cowboy Bebop",
                            TotalEpisodes = 26
                        },
                        new
                        {
                            Id = 8,
                            Demographics = "Shounen",
                            IsAiring = false,
                            IsCompleted = true,
                            ReleaseDate = new DateTime(1979, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = 4,
                            Synopsis = "A young pilot fights in a futuristic war with a giant robot suit.",
                            Title = "Mobile Suit Gundam",
                            TotalEpisodes = 43
                        },
                        new
                        {
                            Id = 9,
                            Demographics = "Shounen",
                            IsAiring = false,
                            IsCompleted = true,
                            ReleaseDate = new DateTime(2009, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = 5,
                            Synopsis = "Two brothers use alchemy to try to restore their bodies after a failed experiment.",
                            Title = "Fullmetal Alchemist: Brotherhood",
                            TotalEpisodes = 64
                        },
                        new
                        {
                            Id = 10,
                            Demographics = "Shounen",
                            IsAiring = true,
                            IsCompleted = false,
                            ReleaseDate = new DateTime(2016, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = 5,
                            Synopsis = "In a world where nearly everyone has superpowers, a powerless boy trains to be a hero.",
                            Title = "My Hero Academia",
                            TotalEpisodes = 113
                        });
                });

            modelBuilder.Entity("Anime.Contracts.Models.Studio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Studios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Studio Ghibli"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Toei Animation"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Madhouse"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sunrise"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Bones"
                        });
                });

            modelBuilder.Entity("Anime.Contracts.Models.Anime", b =>
                {
                    b.HasOne("Anime.Contracts.Models.Studio", "Studio")
                        .WithMany("Animes")
                        .HasForeignKey("StudioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Studio");
                });

            modelBuilder.Entity("Anime.Contracts.Models.Studio", b =>
                {
                    b.Navigation("Animes");
                });
#pragma warning restore 612, 618
        }
    }
}
